// DO NOT EDIT: This file is autogenerated via the builtin command.

package anomalyDetection

import (
	ast "github.com/influxdata/flux/ast"
	parser "github.com/influxdata/flux/internal/parser"
)

var FluxTestPackages = []*ast.Package{&ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 92,
					Line:   77,
				},
				File:   "mad_test.flux",
				Source: "package anomalyDetection_test\n\nimport \"testing\"\nimport \"anomalyDetection\" \n\ninData= \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,_field,_measurement,cpu,host\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,18.6,usage_user,cpu,cpu4,Anais.attlocal.net\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,25.474525474525475,usage_user,cpu,cpu4,Anais.attlocal.net\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,21.878121878121878,usage_user,cpu,cpu4,Anais.attlocal.net\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,24.524524524524523,usage_user,cpu,cpu4,Anais.attlocal.net\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,21.12112112112112,usage_user,cpu,cpu4,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,3.1,usage_user,cpu,cpu3,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,4.795204795204795,usage_user,cpu,cpu3,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,6.806806806806807,usage_user,cpu,cpu3,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,4.095904095904096,usage_user,cpu,cpu3,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,3,usage_user,cpu,cpu3,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,21.8,usage_user,cpu,cpu0,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,29.87012987012987,usage_user,cpu,cpu0,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,25.725725725725727,usage_user,cpu,cpu0,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,28,usage_user,cpu,cpu0,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,25.8,usage_user,cpu,cpu0,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,2.9,usage_user,cpu,cpu7,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,4.6,usage_user,cpu,cpu7,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,6.793206793206793,usage_user,cpu,cpu7,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,4.004004004004004,usage_user,cpu,cpu7,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,2.9,usage_user,cpu,cpu7,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,3.4,usage_user,cpu,cpu1,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,4.7,usage_user,cpu,cpu1,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,7.3,usage_user,cpu,cpu1,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,4.104104104104104,usage_user,cpu,cpu1,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,3.196803196803197,usage_user,cpu,cpu1,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,16.6,usage_user,cpu,cpu6,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,24.6,usage_user,cpu,cpu6,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,20.4,usage_user,cpu,cpu6,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,21.7,usage_user,cpu,cpu6,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,18.81881881881882,usage_user,cpu,cpu6,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,19.660678642714572,usage_user,cpu,cpu2,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,26.726726726726728,usage_user,cpu,cpu2,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,23.3,usage_user,cpu,cpu2,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,26,usage_user,cpu,cpu2,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,22.9,usage_user,cpu,cpu2,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,11.169415292353824,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,15.67108222944264,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,14.889361170146268,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,14.5625,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,12.567212704764287,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,3.2967032967032965,usage_user,cpu,cpu5,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,4.6,usage_user,cpu,cpu5,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,6.9,usage_user,cpu,cpu5,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,3.996003996003996,usage_user,cpu,cpu5,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,2.9029029029029028,usage_user,cpu,cpu5,Anais.attlocal.net\n\"\n\noutData = \"\n#group,false,false,false,true,false,false\n#datatype,string,long,double,dateTime:RFC3339,double,string\n#default,_result,,,,,\n,result,table,MAD,_time,_value,level\n,,0,11.67208280475147,2020-05-06T16:13:00Z,0.6744907594765952,normal\n,,1,16.265726513371657,2020-05-06T16:13:10Z,0.6744907594765952,normal\n,,2,11.845026870858856,2020-05-06T16:13:20Z,0.6744907594765952,normal\n,,3,15.517775087412586,2020-05-06T16:13:30Z,0.6744907594765952,normal\n,,4,14.184349556083532,2020-05-06T16:13:40Z,0.6744907594765952,normal\n\"\n\nt_mad = (table=<-) =>\n\ttable\n\t\t|> range(start: 2020-04-29T21:04:00Z, stop: 2020-05-29T21:05:00Z)\n\t\t|> anomalyDetection.mad()\n\n\ntest _linearRegression = () =>\n({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_mad})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   56,
					},
					File:   "mad_test.flux",
					Source: "inData= \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,_field,_measurement,cpu,host\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,18.6,usage_user,cpu,cpu4,Anais.attlocal.net\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,25.474525474525475,usage_user,cpu,cpu4,Anais.attlocal.net\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,21.878121878121878,usage_user,cpu,cpu4,Anais.attlocal.net\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,24.524524524524523,usage_user,cpu,cpu4,Anais.attlocal.net\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,21.12112112112112,usage_user,cpu,cpu4,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,3.1,usage_user,cpu,cpu3,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,4.795204795204795,usage_user,cpu,cpu3,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,6.806806806806807,usage_user,cpu,cpu3,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,4.095904095904096,usage_user,cpu,cpu3,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,3,usage_user,cpu,cpu3,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,21.8,usage_user,cpu,cpu0,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,29.87012987012987,usage_user,cpu,cpu0,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,25.725725725725727,usage_user,cpu,cpu0,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,28,usage_user,cpu,cpu0,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,25.8,usage_user,cpu,cpu0,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,2.9,usage_user,cpu,cpu7,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,4.6,usage_user,cpu,cpu7,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,6.793206793206793,usage_user,cpu,cpu7,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,4.004004004004004,usage_user,cpu,cpu7,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,2.9,usage_user,cpu,cpu7,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,3.4,usage_user,cpu,cpu1,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,4.7,usage_user,cpu,cpu1,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,7.3,usage_user,cpu,cpu1,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,4.104104104104104,usage_user,cpu,cpu1,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,3.196803196803197,usage_user,cpu,cpu1,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,16.6,usage_user,cpu,cpu6,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,24.6,usage_user,cpu,cpu6,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,20.4,usage_user,cpu,cpu6,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,21.7,usage_user,cpu,cpu6,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,18.81881881881882,usage_user,cpu,cpu6,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,19.660678642714572,usage_user,cpu,cpu2,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,26.726726726726728,usage_user,cpu,cpu2,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,23.3,usage_user,cpu,cpu2,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,26,usage_user,cpu,cpu2,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,22.9,usage_user,cpu,cpu2,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,11.169415292353824,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,15.67108222944264,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,14.889361170146268,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,14.5625,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,12.567212704764287,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,3.2967032967032965,usage_user,cpu,cpu5,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,4.6,usage_user,cpu,cpu5,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,6.9,usage_user,cpu,cpu5,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,3.996003996003996,usage_user,cpu,cpu5,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,2.9029029029029028,usage_user,cpu,cpu5,Anais.attlocal.net\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   6,
						},
						File:   "mad_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   6,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   56,
						},
						File:   "mad_test.flux",
						Source: "\"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,_field,_measurement,cpu,host\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,18.6,usage_user,cpu,cpu4,Anais.attlocal.net\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,25.474525474525475,usage_user,cpu,cpu4,Anais.attlocal.net\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,21.878121878121878,usage_user,cpu,cpu4,Anais.attlocal.net\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,24.524524524524523,usage_user,cpu,cpu4,Anais.attlocal.net\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,21.12112112112112,usage_user,cpu,cpu4,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,3.1,usage_user,cpu,cpu3,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,4.795204795204795,usage_user,cpu,cpu3,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,6.806806806806807,usage_user,cpu,cpu3,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,4.095904095904096,usage_user,cpu,cpu3,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,3,usage_user,cpu,cpu3,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,21.8,usage_user,cpu,cpu0,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,29.87012987012987,usage_user,cpu,cpu0,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,25.725725725725727,usage_user,cpu,cpu0,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,28,usage_user,cpu,cpu0,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,25.8,usage_user,cpu,cpu0,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,2.9,usage_user,cpu,cpu7,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,4.6,usage_user,cpu,cpu7,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,6.793206793206793,usage_user,cpu,cpu7,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,4.004004004004004,usage_user,cpu,cpu7,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,2.9,usage_user,cpu,cpu7,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,3.4,usage_user,cpu,cpu1,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,4.7,usage_user,cpu,cpu1,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,7.3,usage_user,cpu,cpu1,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,4.104104104104104,usage_user,cpu,cpu1,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,3.196803196803197,usage_user,cpu,cpu1,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,16.6,usage_user,cpu,cpu6,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,24.6,usage_user,cpu,cpu6,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,20.4,usage_user,cpu,cpu6,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,21.7,usage_user,cpu,cpu6,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,18.81881881881882,usage_user,cpu,cpu6,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,19.660678642714572,usage_user,cpu,cpu2,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,26.726726726726728,usage_user,cpu,cpu2,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,23.3,usage_user,cpu,cpu2,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,26,usage_user,cpu,cpu2,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,22.9,usage_user,cpu,cpu2,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,11.169415292353824,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,15.67108222944264,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,14.889361170146268,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,14.5625,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,12.567212704764287,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,3.2967032967032965,usage_user,cpu,cpu5,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,4.6,usage_user,cpu,cpu5,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,6.9,usage_user,cpu,cpu5,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,3.996003996003996,usage_user,cpu,cpu5,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,2.9029029029029028,usage_user,cpu,cpu5,Anais.attlocal.net\n\"",
						Start: ast.Position{
							Column: 9,
							Line:   6,
						},
					},
				},
				Value: "\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,_field,_measurement,cpu,host\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,18.6,usage_user,cpu,cpu4,Anais.attlocal.net\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,25.474525474525475,usage_user,cpu,cpu4,Anais.attlocal.net\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,21.878121878121878,usage_user,cpu,cpu4,Anais.attlocal.net\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,24.524524524524523,usage_user,cpu,cpu4,Anais.attlocal.net\n,,0,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,21.12112112112112,usage_user,cpu,cpu4,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,3.1,usage_user,cpu,cpu3,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,4.795204795204795,usage_user,cpu,cpu3,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,6.806806806806807,usage_user,cpu,cpu3,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,4.095904095904096,usage_user,cpu,cpu3,Anais.attlocal.net\n,,1,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,3,usage_user,cpu,cpu3,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,21.8,usage_user,cpu,cpu0,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,29.87012987012987,usage_user,cpu,cpu0,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,25.725725725725727,usage_user,cpu,cpu0,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,28,usage_user,cpu,cpu0,Anais.attlocal.net\n,,2,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,25.8,usage_user,cpu,cpu0,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,2.9,usage_user,cpu,cpu7,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,4.6,usage_user,cpu,cpu7,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,6.793206793206793,usage_user,cpu,cpu7,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,4.004004004004004,usage_user,cpu,cpu7,Anais.attlocal.net\n,,3,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,2.9,usage_user,cpu,cpu7,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,3.4,usage_user,cpu,cpu1,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,4.7,usage_user,cpu,cpu1,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,7.3,usage_user,cpu,cpu1,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,4.104104104104104,usage_user,cpu,cpu1,Anais.attlocal.net\n,,4,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,3.196803196803197,usage_user,cpu,cpu1,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,16.6,usage_user,cpu,cpu6,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,24.6,usage_user,cpu,cpu6,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,20.4,usage_user,cpu,cpu6,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,21.7,usage_user,cpu,cpu6,Anais.attlocal.net\n,,5,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,18.81881881881882,usage_user,cpu,cpu6,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,19.660678642714572,usage_user,cpu,cpu2,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,26.726726726726728,usage_user,cpu,cpu2,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,23.3,usage_user,cpu,cpu2,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,26,usage_user,cpu,cpu2,Anais.attlocal.net\n,,6,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,22.9,usage_user,cpu,cpu2,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,11.169415292353824,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,15.67108222944264,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,14.889361170146268,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,14.5625,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,7,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,12.567212704764287,usage_user,cpu,cpu-total,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:00Z,3.2967032967032965,usage_user,cpu,cpu5,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:10Z,4.6,usage_user,cpu,cpu5,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:20Z,6.9,usage_user,cpu,cpu5,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:30Z,3.996003996003996,usage_user,cpu,cpu5,Anais.attlocal.net\n,,8,2020-04-29T21:04:59.916661Z,2020-05-29T21:04:59.916661Z,2020-05-06T16:13:40Z,2.9029029029029028,usage_user,cpu,cpu5,Anais.attlocal.net\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   68,
					},
					File:   "mad_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,false,false\n#datatype,string,long,double,dateTime:RFC3339,double,string\n#default,_result,,,,,\n,result,table,MAD,_time,_value,level\n,,0,11.67208280475147,2020-05-06T16:13:00Z,0.6744907594765952,normal\n,,1,16.265726513371657,2020-05-06T16:13:10Z,0.6744907594765952,normal\n,,2,11.845026870858856,2020-05-06T16:13:20Z,0.6744907594765952,normal\n,,3,15.517775087412586,2020-05-06T16:13:30Z,0.6744907594765952,normal\n,,4,14.184349556083532,2020-05-06T16:13:40Z,0.6744907594765952,normal\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   58,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   58,
						},
						File:   "mad_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   58,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   68,
						},
						File:   "mad_test.flux",
						Source: "\"\n#group,false,false,false,true,false,false\n#datatype,string,long,double,dateTime:RFC3339,double,string\n#default,_result,,,,,\n,result,table,MAD,_time,_value,level\n,,0,11.67208280475147,2020-05-06T16:13:00Z,0.6744907594765952,normal\n,,1,16.265726513371657,2020-05-06T16:13:10Z,0.6744907594765952,normal\n,,2,11.845026870858856,2020-05-06T16:13:20Z,0.6744907594765952,normal\n,,3,15.517775087412586,2020-05-06T16:13:30Z,0.6744907594765952,normal\n,,4,14.184349556083532,2020-05-06T16:13:40Z,0.6744907594765952,normal\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   58,
						},
					},
				},
				Value: "\n#group,false,false,false,true,false,false\n#datatype,string,long,double,dateTime:RFC3339,double,string\n#default,_result,,,,,\n,result,table,MAD,_time,_value,level\n,,0,11.67208280475147,2020-05-06T16:13:00Z,0.6744907594765952,normal\n,,1,16.265726513371657,2020-05-06T16:13:10Z,0.6744907594765952,normal\n,,2,11.845026870858856,2020-05-06T16:13:20Z,0.6744907594765952,normal\n,,3,15.517775087412586,2020-05-06T16:13:30Z,0.6744907594765952,normal\n,,4,14.184349556083532,2020-05-06T16:13:40Z,0.6744907594765952,normal\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 28,
						Line:   73,
					},
					File:   "mad_test.flux",
					Source: "t_mad = (table=<-) =>\n\ttable\n\t\t|> range(start: 2020-04-29T21:04:00Z, stop: 2020-05-29T21:05:00Z)\n\t\t|> anomalyDetection.mad()",
					Start: ast.Position{
						Column: 1,
						Line:   70,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 6,
							Line:   70,
						},
						File:   "mad_test.flux",
						Source: "t_mad",
						Start: ast.Position{
							Column: 1,
							Line:   70,
						},
					},
				},
				Name: "t_mad",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 28,
							Line:   73,
						},
						File:   "mad_test.flux",
						Source: "(table=<-) =>\n\ttable\n\t\t|> range(start: 2020-04-29T21:04:00Z, stop: 2020-05-29T21:05:00Z)\n\t\t|> anomalyDetection.mad()",
						Start: ast.Position{
							Column: 9,
							Line:   70,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 7,
										Line:   71,
									},
									File:   "mad_test.flux",
									Source: "table",
									Start: ast.Position{
										Column: 2,
										Line:   71,
									},
								},
							},
							Name: "table",
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 68,
									Line:   72,
								},
								File:   "mad_test.flux",
								Source: "table\n\t\t|> range(start: 2020-04-29T21:04:00Z, stop: 2020-05-29T21:05:00Z)",
								Start: ast.Position{
									Column: 2,
									Line:   71,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 67,
											Line:   72,
										},
										File:   "mad_test.flux",
										Source: "start: 2020-04-29T21:04:00Z, stop: 2020-05-29T21:05:00Z",
										Start: ast.Position{
											Column: 12,
											Line:   72,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 39,
												Line:   72,
											},
											File:   "mad_test.flux",
											Source: "start: 2020-04-29T21:04:00Z",
											Start: ast.Position{
												Column: 12,
												Line:   72,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 17,
													Line:   72,
												},
												File:   "mad_test.flux",
												Source: "start",
												Start: ast.Position{
													Column: 12,
													Line:   72,
												},
											},
										},
										Name: "start",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 39,
													Line:   72,
												},
												File:   "mad_test.flux",
												Source: "2020-04-29T21:04:00Z",
												Start: ast.Position{
													Column: 19,
													Line:   72,
												},
											},
										},
										Value: parser.MustParseTime("2020-04-29T21:04:00Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 67,
												Line:   72,
											},
											File:   "mad_test.flux",
											Source: "stop: 2020-05-29T21:05:00Z",
											Start: ast.Position{
												Column: 41,
												Line:   72,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 45,
													Line:   72,
												},
												File:   "mad_test.flux",
												Source: "stop",
												Start: ast.Position{
													Column: 41,
													Line:   72,
												},
											},
										},
										Name: "stop",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 67,
													Line:   72,
												},
												File:   "mad_test.flux",
												Source: "2020-05-29T21:05:00Z",
												Start: ast.Position{
													Column: 47,
													Line:   72,
												},
											},
										},
										Value: parser.MustParseTime("2020-05-29T21:05:00Z"),
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 68,
										Line:   72,
									},
									File:   "mad_test.flux",
									Source: "range(start: 2020-04-29T21:04:00Z, stop: 2020-05-29T21:05:00Z)",
									Start: ast.Position{
										Column: 6,
										Line:   72,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   72,
										},
										File:   "mad_test.flux",
										Source: "range",
										Start: ast.Position{
											Column: 6,
											Line:   72,
										},
									},
								},
								Name: "range",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 28,
								Line:   73,
							},
							File:   "mad_test.flux",
							Source: "table\n\t\t|> range(start: 2020-04-29T21:04:00Z, stop: 2020-05-29T21:05:00Z)\n\t\t|> anomalyDetection.mad()",
							Start: ast.Position{
								Column: 2,
								Line:   71,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: nil,
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 28,
									Line:   73,
								},
								File:   "mad_test.flux",
								Source: "anomalyDetection.mad()",
								Start: ast.Position{
									Column: 6,
									Line:   73,
								},
							},
						},
						Callee: &ast.MemberExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   73,
									},
									File:   "mad_test.flux",
									Source: "anomalyDetection.mad",
									Start: ast.Position{
										Column: 6,
										Line:   73,
									},
								},
							},
							Object: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 22,
											Line:   73,
										},
										File:   "mad_test.flux",
										Source: "anomalyDetection",
										Start: ast.Position{
											Column: 6,
											Line:   73,
										},
									},
								},
								Name: "anomalyDetection",
							},
							Property: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   73,
										},
										File:   "mad_test.flux",
										Source: "mad",
										Start: ast.Position{
											Column: 23,
											Line:   73,
										},
									},
								},
								Name: "mad",
							},
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   70,
							},
							File:   "mad_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 10,
								Line:   70,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   70,
								},
								File:   "mad_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 10,
									Line:   70,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   70,
							},
							File:   "mad_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 16,
								Line:   70,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 92,
							Line:   77,
						},
						File:   "mad_test.flux",
						Source: "_linearRegression = () =>\n({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_mad})",
						Start: ast.Position{
							Column: 6,
							Line:   76,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 23,
								Line:   76,
							},
							File:   "mad_test.flux",
							Source: "_linearRegression",
							Start: ast.Position{
								Column: 6,
								Line:   76,
							},
						},
					},
					Name: "_linearRegression",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 92,
								Line:   77,
							},
							File:   "mad_test.flux",
							Source: "() =>\n({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_mad})",
							Start: ast.Position{
								Column: 26,
								Line:   76,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 92,
									Line:   77,
								},
								File:   "mad_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_mad})",
								Start: ast.Position{
									Column: 1,
									Line:   77,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 91,
										Line:   77,
									},
									File:   "mad_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_mad}",
									Start: ast.Position{
										Column: 2,
										Line:   77,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   77,
										},
										File:   "mad_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 3,
											Line:   77,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 8,
												Line:   77,
											},
											File:   "mad_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 3,
												Line:   77,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   77,
												},
												File:   "mad_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 30,
													Line:   77,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   77,
													},
													File:   "mad_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 30,
														Line:   77,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 33,
															Line:   77,
														},
														File:   "mad_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 30,
															Line:   77,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   77,
														},
														File:   "mad_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 35,
															Line:   77,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   77,
											},
											File:   "mad_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 10,
												Line:   77,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   77,
												},
												File:   "mad_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 10,
													Line:   77,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 17,
														Line:   77,
													},
													File:   "mad_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 10,
														Line:   77,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 29,
														Line:   77,
													},
													File:   "mad_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 18,
														Line:   77,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 79,
											Line:   77,
										},
										File:   "mad_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 44,
											Line:   77,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 48,
												Line:   77,
											},
											File:   "mad_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 44,
												Line:   77,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 78,
													Line:   77,
												},
												File:   "mad_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 66,
													Line:   77,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 78,
														Line:   77,
													},
													File:   "mad_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 66,
														Line:   77,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 69,
															Line:   77,
														},
														File:   "mad_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 66,
															Line:   77,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 78,
															Line:   77,
														},
														File:   "mad_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 71,
															Line:   77,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 79,
												Line:   77,
											},
											File:   "mad_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 50,
												Line:   77,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   77,
												},
												File:   "mad_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 50,
													Line:   77,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 57,
														Line:   77,
													},
													File:   "mad_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 50,
														Line:   77,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 65,
														Line:   77,
													},
													File:   "mad_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 58,
														Line:   77,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 90,
											Line:   77,
										},
										File:   "mad_test.flux",
										Source: "fn: t_mad",
										Start: ast.Position{
											Column: 81,
											Line:   77,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 83,
												Line:   77,
											},
											File:   "mad_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 81,
												Line:   77,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 90,
												Line:   77,
											},
											File:   "mad_test.flux",
											Source: "t_mad",
											Start: ast.Position{
												Column: 85,
												Line:   77,
											},
										},
									},
									Name: "t_mad",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 92,
						Line:   77,
					},
					File:   "mad_test.flux",
					Source: "test _linearRegression = () =>\n({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_mad})",
					Start: ast.Position{
						Column: 1,
						Line:   76,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   3,
					},
					File:   "mad_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   3,
						},
						File:   "mad_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "testing",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   4,
					},
					File:   "mad_test.flux",
					Source: "import \"anomalyDetection\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   4,
						},
						File:   "mad_test.flux",
						Source: "\"anomalyDetection\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "anomalyDetection",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "mad_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 30,
						Line:   1,
					},
					File:   "mad_test.flux",
					Source: "package anomalyDetection_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 30,
							Line:   1,
						},
						File:   "mad_test.flux",
						Source: "anomalyDetection_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "anomalyDetection_test",
			},
		},
	}},
	Package: "anomalyDetection_test",
	Path:    "contrib/anaisdg/anomalyDetection",
}}
